//input.txt

var x,y,z,v,w;
procedure a;
 var x,y,u,v;
 procedure b;
  var z;
  begin
   z:=3;
  end;
 begin
  read u;
  if u < 10 then z := z+u;
  else z := z-u;
  call b;
 end;
begin
 x:=1; 
 y:=2; 
 z:=10; 
 v:=4; 
 w:=5;
 x:=v+w;
 write z;
 call a;
 write z;
end.


//cleaninput.txt

var x,y,z,v,w;
procedure a;
 var x,y,u,v;
 procedure b;
  var z;
  begin
   z:=3;
  end;
 begin
  read u;
  if u < 10 then z := z+u;
  else z := z-u;
  call b;
 end;
begin
 x:=1; 
 y:=2; 
 z:=10; 
 v:=4; 
 w:=5;
 x:=v+w;
 write z;
 call a;
 write z;
end.


//lexemelist.txt

29 2 x 17 2 y 17 2 z 17 2 v 17 2 w 18 30 2 a 18 29 2 x 17 2 y 17 2 u 17 2 v 18 30 2 b 18 29 2 z 18 21 2 z 20 3 3 18 22 18 21 32 2 u 18 23 2 u 11 3 10 24 2 z 20 2 z 4 2 u 18 33 2 z 20 2 z 5 2 u 18 27 2 b 18 22 18 21 2 x 20 3 1 18 2 y 20 3 2 18 2 z 20 3 10 18 2 v 20 3 4 18 2 w 20 3 5 18 2 x 20 2 v 4 2 w 18 31 2 z 18 27 2 a 18 31 2 z 18 22 19 


//lexemetable.txt

lexeme	token type
var	29
x	2
,	17
y	2
,	17
z	2
,	17
v	2
,	17
w	2
;	18
procedure	30
a	2
;	18
var	29
x	2
,	17
y	2
,	17
u	2
,	17
v	2
;	18
procedure	30
b	2
;	18
var	29
z	2
;	18
begin	21
z	2
:=	20
3	3
;	18
end	22
;	18
begin	21
read	32
u	2
;	18
if	23
u	2
<	11
10	3
then	24
z	2
:=	20
z	2
+	4
u	2
;	18
else	33
z	2
:=	20
z	2
-	5
u	2
;	18
call	27
b	2
;	18
end	22
;	18
begin	21
x	2
:=	20
1	3
;	18
y	2
:=	20
2	3
;	18
z	2
:=	20
10	3
;	18
v	2
:=	20
4	3
;	18
w	2
:=	20
5	3
;	18
x	2
:=	20
v	2
+	4
w	2
;	18
write	31
z	2
;	18
call	27
a	2
;	18
write	31
z	2
;	18
end	22
.	19


//mcode.txt

7 0 24 
7 0 6 
6 0 5 
1 0 3 
4 0 4 
2 0 0 
6 0 8 
9 0 1 
4 0 6 
3 0 6 
1 0 10 
2 0 10 
8 0 18 
3 1 6 
3 0 6 
2 0 2 
4 1 6 
7 0 22 
3 1 6 
3 0 6 
2 0 3 
4 1 6 
5 0 2 
2 0 0 
6 0 9 
1 0 1 
4 0 4 
1 0 2 
4 0 5 
1 0 10 
4 0 6 
1 0 4 
4 0 7 
1 0 5 
4 0 8 
3 0 7 
3 0 8 
2 0 2 
4 0 4 
3 0 6 
9 0 0 
5 0 1 
3 0 6 
9 0 0 
9 0 2 


//stacktrace.txt

Line  OP     L   M
  0   jmp    0   24
  1   jmp    0    6
  2   inc    0    5
  3   lit    0    3
  4   sto    0    4
  5   opr    0    0
  6   inc    0    8
  7   sio    0    1
  8   sto    0    6
  9   lod    0    6
 10   lit    0   10
 11   opr    0   10
 12   jpc    0   18
 13   lod    1    6
 14   lod    0    6
 15   opr    0    2
 16   sto    1    6
 17   jmp    0   22
 18   lod    1    6
 19   lod    0    6
 20   opr    0    3
 21   sto    1    6
 22   cal    0    2
 23   opr    0    0
 24   inc    0    9
 25   lit    0    1
 26   sto    0    4
 27   lit    0    2
 28   sto    0    5
 29   lit    0   10
 30   sto    0    6
 31   lit    0    4
 32   sto    0    7
 33   lit    0    5
 34   sto    0    8
 35   lod    0    7
 36   lod    0    8
 37   opr    0    2
 38   sto    0    4
 39   lod    0    6
 40   sio    0    0
 41   cal    0    1
 42   lod    0    6
 43   sio    0    0
 44   sio    0    2
                      pc   bp   sp   stack
Initial values         0    1    0
  0   jmp    0   24   24    1    0    
 24   inc    0    9   25    1    9   0 0 0 0 0 0 0 0 0  
 25   lit    0    1   26    1   10   0 0 0 0 0 0 0 0 0 1  
 26   sto    0    4   27    1    9   0 0 0 0 1 0 0 0 0  
 27   lit    0    2   28    1   10   0 0 0 0 1 0 0 0 0 2  
 28   sto    0    5   29    1    9   0 0 0 0 1 2 0 0 0  
 29   lit    0   10   30    1   10   0 0 0 0 1 2 0 0 0 10  
 30   sto    0    6   31    1    9   0 0 0 0 1 2 10 0 0  
 31   lit    0    4   32    1   10   0 0 0 0 1 2 10 0 0 4  
 32   sto    0    7   33    1    9   0 0 0 0 1 2 10 4 0  
 33   lit    0    5   34    1   10   0 0 0 0 1 2 10 4 0 5  
 34   sto    0    8   35    1    9   0 0 0 0 1 2 10 4 5  
 35   lod    0    7   36    1   10   0 0 0 0 1 2 10 4 5 4  
 36   lod    0    8   37    1   11   0 0 0 0 1 2 10 4 5 4 5  
 37   opr    0    2   38    1   10   0 0 0 0 1 2 10 4 5 9  
 38   sto    0    4   39    1    9   0 0 0 0 9 2 10 4 5  
 39   lod    0    6   40    1   10   0 0 0 0 9 2 10 4 5 10  
 40   sio    0    0   41    1    9   0 0 0 0 9 2 10 4 5  
 41   cal    0    1    1   10    9   0 0 0 0 9 2 10 4 5  
  1   jmp    0    6    6   10    9   0 0 0 0 9 2 10 4 5  
  6   inc    0    8    7   10   17   0 0 0 0 9 2 10 4 5 |0 1 1 42 0 0 0 0  
  7   sio    0    1    8   10   18   0 0 0 0 9 2 10 4 5 |0 1 1 42 0 0 0 0 5  
  8   sto    0    6    9   10   17   0 0 0 0 9 2 10 4 5 |0 1 1 42 0 0 5 0  
  9   lod    0    6   10   10   18   0 0 0 0 9 2 10 4 5 |0 1 1 42 0 0 5 0 5  
 10   lit    0   10   11   10   19   0 0 0 0 9 2 10 4 5 |0 1 1 42 0 0 5 0 5 10  
 11   opr    0   10   12   10   18   0 0 0 0 9 2 10 4 5 |0 1 1 42 0 0 5 0 1  
 12   jpc    0   18   13   10   17   0 0 0 0 9 2 10 4 5 |0 1 1 42 0 0 5 0  
 13   lod    1    6   14   10   18   0 0 0 0 9 2 10 4 5 |0 1 1 42 0 0 5 0 10  
 14   lod    0    6   15   10   19   0 0 0 0 9 2 10 4 5 |0 1 1 42 0 0 5 0 10 5  
 15   opr    0    2   16   10   18   0 0 0 0 9 2 10 4 5 |0 1 1 42 0 0 5 0 15  
 16   sto    1    6   17   10   17   0 0 0 0 9 2 15 4 5 |0 1 1 42 0 0 5 0  
 17   jmp    0   22   22   10   17   0 0 0 0 9 2 15 4 5 |0 1 1 42 0 0 5 0  
 22   cal    0    2    2   18   17   0 0 0 0 9 2 15 4 5 |0 1 1 42 0 0 5 0  
  2   inc    0    5    3   18   22   0 0 0 0 9 2 15 4 5 |0 1 1 42 0 0 5 0 |0 10 10 23 0  
  3   lit    0    3    4   18   23   0 0 0 0 9 2 15 4 5 |0 1 1 42 0 0 5 0 |0 10 10 23 0 3  
  4   sto    0    4    5   18   22   0 0 0 0 9 2 15 4 5 |0 1 1 42 0 0 5 0 |0 10 10 23 3  
  5   opr    0    0   23   10   17   0 0 0 0 9 2 15 4 5 |0 1 1 42 0 0 5 0  
 23   opr    0    0   42    1    9   0 0 0 0 9 2 15 4 5  
 42   lod    0    6   43    1   10   0 0 0 0 9 2 15 4 5 |15  
 43   sio    0    0   44    1    9   0 0 0 0 9 2 15 4 5  
 44   sio    0    2   45    1    9   0 0 0 0 9 2 15 4 5  



